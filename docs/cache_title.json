{"_default": {"1": {"path": "/README.md", "hash": "8c9c39ed0d93942ffd1d17b7f7a548ef", "title": "Comprehensive Guide to ACT, Diffusion Policy, and VINN"}, "2": {"path": "/README.md:1-20", "hash": "28d3da1ee83dc1762f1256ebe01abcd6", "title": "Multi-Algorithm Robotic Environment Simulator"}, "3": {"path": "/README.md:21-57", "hash": "a454478e405efb38c243c3452e555a74", "title": "ALOHA Installation & Setup Guide"}, "4": {"path": "/README.md:58-77", "hash": "7cc105dfb1836729520efd3434db4678", "title": "Train, Visualize, and Evaluate ACT Model"}, "5": {"path": "/README.md:78-85", "hash": "8481d83c31b9204ee9b743ded29edf4c", "title": "Optimize Video Training with Real-Time Rendering and Extended Epochs"}, "6": {"path": "/__init__.py", "hash": "cec9626866e3de47b970db521ddb131c", "title": "Incomplete Code Snippet"}, "7": {"path": "/align.py", "hash": "b31f355e28475e3795e3a8e5493a7ada", "title": "Calibrating Interbotix Arms and Opening Grippers"}, "8": {"path": "/align.py:1-23", "hash": "75dfac07c89d11217c46af2c670b2437", "title": "Calibrating Puppet Bots' Head Cam and Arms"}, "9": {"path": "/align.py:24-31", "hash": "1013910d5ed4244b2263c6067b25b8f8", "title": "Sleep & Open Bots' Grippers"}, "10": {"path": "/commands.txt", "hash": "7ff7bb37d1dcaf05d21f8a35886778e2", "title": "Training RL Models and Preprocessing Data"}, "11": {"path": "/commands.txt:2-28", "hash": "8eea41d00b50f6a006811133a4b9664b", "title": "Automated Reinforcement Learning Experimentation"}, "12": {"path": "/commands.txt:29-43", "hash": "8b7dcc461255679b788865d16f64aa26", "title": "Mirrored Data Simulation Generator"}, "13": {"path": "/commands.txt:45-69", "hash": "f911429bedf23249f73fcc0a43fe84cd", "title": "Sanity Checking Mirrored Data with ACT Policy"}, "14": {"path": "/commands.txt:70-97", "hash": "ce4d50b93ad8e242427970c0cf657ade", "title": "Hyperparameter Tuning for Imitation Learning"}, "15": {"path": "/commands.txt:98-125", "hash": "edc6350192ecbdac81ed38a65491ec1a", "title": "Train & Evaluate Sim Transfer Cube Policy"}, "16": {"path": "/commands.txt:126-152", "hash": "85bdee9394e89ce3d50adb412cc1f935", "title": "Conda Environment, MUJOCO_GL, Act-Plus-Plus Task Training"}, "17": {"path": "/commands.txt:153-173", "hash": "181ea4010854464fe944baecf80a3573", "title": "Diffusion-based Policy Model Training & Evaluation Code"}, "18": {"path": "/commands.txt:175-201", "hash": "3f15f82219a798e9c810a8996af92e28", "title": "Training Diffusion Policies on Aloha Tasks"}, "19": {"path": "/commands.txt:202-227", "hash": "63698a7b0f2a06544d2e48897300fb0e", "title": "Training Robot Model with Chunk Sizes and Environment Settings"}, "20": {"path": "/commands.txt:228-256", "hash": "652714df1e347884a75f6ed70c911241", "title": "Training Diffusion Policy Model: Aloha Mobile Wipe"}, "21": {"path": "/commands.txt:257-278", "hash": "13ab6a3b75cce3ab82c6843358943d3d", "title": "Activate, Change, Set, Run and Cache"}, "22": {"path": "/commands.txt:280-307", "hash": "1fea859fc4f000e5372c61e30a9fdcf6", "title": "Training VINN Model with Camera Compatibility"}, "23": {"path": "/commands.txt:307-331", "hash": "6518ce34d05bd10c5ef955920fcfb237", "title": "BYOL Training and Feature Selection for sim_transfer_cube_scripted Task"}, "24": {"path": "/commands.txt:332-346", "hash": "d0a59139df7584948ccfb8a224953f5b", "title": "CUDA-Powered Python Training Scripts"}, "25": {"path": "/commands.txt:347-362", "hash": "43ee903455fd03356999d25650dda3ba", "title": "CUDA Control for Multi-Model Training"}, "26": {"path": "/commands.txt:363-387", "hash": "36233c36d8ab7c92d107ff17e7281e46", "title": "Conda Environment: Training and Caching Features with Python"}, "27": {"path": "/commands.txt:388-409", "hash": "67c1789c6cd8a49b055874b07fbfa325", "title": "Activate Conda Environment for CUDA"}, "28": {"path": "/commands.txt:411-433", "hash": "f28a8a15bdc70100f81406336c6a18ce", "title": "Environment Switching and Training Scripts Execution"}, "29": {"path": "/commands.txt:434-459", "hash": "38a7e65a8c5e4c2d406ecc479eb74674", "title": "BYOL Model Training on Aloha and Wine Datasets"}, "30": {"path": "/commands.txt:459-481", "hash": "61a8bae1fff53cfbe31ee10766895c14", "title": "Training VINN Model through Commands"}, "31": {"path": "/commands.txt:485-514", "hash": "efc3ddf78df78531ad057b6f0720da16", "title": "Training and Evaluating Models with VINN and BYOL"}, "32": {"path": "/commands.txt:515-527", "hash": "7c4e790c26fd42f3b0b3b9c68b816ab8", "title": "Activate Conda, Change Directory, Train Network"}, "33": {"path": "/compress_data.py", "hash": "0454a06f1ff37b78f02b54a812086dd4", "title": "Data Compression and Processing Tool"}, "34": {"path": "/compress_data.py:1-35", "hash": "1503aae036734ffaaa0b488b5d6661d5", "title": "Compress HDF5 Dataset Efficiently"}, "35": {"path": "/compress_data.py:37-61", "hash": "97baaaea6523ee7c76a053062863f25f", "title": "Compress Data with JPEG Parameters"}, "36": {"path": "/compress_data.py:63-82", "hash": "2975d526d0b6a252b859e3fa545d90d2", "title": "Image Compression and Storage in HDF5"}, "37": {"path": "/compress_data.py:83-108", "hash": "68ec119de77cea45c71c1e79d0a81880", "title": "Compress and Save Multi-Camera Video"}, "38": {"path": "/compress_data.py:109-135", "hash": "c1b6d16c75f169bc7fb5fc5a09dfe5b5", "title": "HDF5 Data Preprocessing and Video Conversion"}, "39": {"path": "/compress_data.py:136-159", "hash": "ccaa55d5bf21e427cdb233fbf475f2af", "title": "Compressed Images Loader"}, "40": {"path": "/compress_data.py:162-181", "hash": "05d90736d30c6f46e58d4aaa1057e363", "title": "Compress HDF5 Datasets in Directory"}, "41": {"path": "/conda_env.yaml", "hash": "ff153eebacfad93628546514636b2a95", "title": "Conda Environment Definition: aloha"}, "42": {"path": "/constants.py", "hash": "5289fbe658e69c7e35b468b3cd9ced1b", "title": "Gripper Limits and Environments: Robotics Task Parameters"}, "43": {"path": "/constants.py:1-35", "hash": "6aa55a60318dfe633d5118bbdea4d4b9", "title": "Task Parameters Constants"}, "44": {"path": "/constants.py:36-66", "hash": "1a2b1e17d5569d8c8f0bde6d01797ed4", "title": "Simulation Constants Dictionary"}, "45": {"path": "/constants.py:67-84", "hash": "83009deffbd2b658a0452165de5442b0", "title": "Gripper Position and Limits Constants"}, "46": {"path": "/constants.py:84-95", "hash": "8dcb24fdb30643cfb35dcf9cf96332ec", "title": "Joint Normalization and Conversion Functions"}, "47": {"path": "/constants.py:95-100", "hash": "d5b13010a9ad15d3bb063e7909674b62", "title": "Gripper Angle Conversion Functions"}, "48": {"path": "/detr/README.md", "hash": "9802f2c9d4359a92b72ad344ac76d9ca", "title": "DETR Code Snippet"}, "49": {"path": "/detr/main.py", "hash": "8f1de64642d32f339c5ddd6a0baebb40", "title": "DETR Model Initialization and Optimizer Creation"}, "50": {"path": "/detr/main.py:1-25", "hash": "4d14e834b154d7aba4df885974f9b316", "title": "Transformer Detector Training Code"}, "51": {"path": "/detr/main.py:26-40", "hash": "6e529d4278498d4cefb7abdd63f311b7", "title": "Command Line Arguments for DETR Model"}, "52": {"path": "/detr/main.py:40-56", "hash": "cc1aba60bec218557d5d826e48e7a1b6", "title": "Command Line Arguments for DETR Model"}, "53": {"path": "/detr/main.py:57-69", "hash": "034345c93295454d07332057caa749d6", "title": "CLI Argument Parsing with Argparse"}, "54": {"path": "/detr/main.py:70-81", "hash": "62cc57f7677d90de9fb65b93042d64ec", "title": "Command-Line Arguments for DETR Python Script"}, "55": {"path": "/detr/main.py:83-116", "hash": "77686064731bd054253d21ce35668c0a", "title": "Build Models and Optimizers for DETR"}, "56": {"path": "/detr/main.py:117-129", "hash": "895c6638c9344bd839a25c95dedfdef8", "title": "GPU Initialization and Optimizer Setup"}, "57": {"path": "/detr/models/__init__.py", "hash": "55a612202e6b0d4d170693f25f881cf3", "title": "Building Models in DETR"}, "58": {"path": "/detr/models/backbone.py", "hash": "bb92fe4b61919ed240fa8d5fab0ddcfb", "title": "ResNet-VT Backbone Builder"}, "59": {"path": "/detr/models/backbone.py:1-35", "hash": "42756a22ecb64a7daf7bfe6044ea943a", "title": "Frozen BatchNorm2d Implementation"}, "60": {"path": "/detr/models/backbone.py:37-62", "hash": "87966c817074901e9472ac97082202d2", "title": "Backbone Base: Reshaping and Loading Weights"}, "61": {"path": "/detr/models/backbone.py:63-86", "hash": "2bd9d6ad0aae700dcc35ecf6ede28ff7", "title": "Nested Backbone Dictionary Class"}, "62": {"path": "/detr/models/backbone.py:87-112", "hash": "cecffe0e5525079baa3ef2ef47a0b223", "title": "ResNet Backbone Model for Transfer Learning"}, "63": {"path": "/detr/models/backbone.py:115-122", "hash": "c67e431f257906e41b1c44595849edbe", "title": "Building Vision Transformer Backbone Model"}, "64": {"path": "/detr/models/detr_vae.py", "hash": "0b85237aede9417011cbf29ee7d09fc7", "title": "DETR-CVAE: Image Object Detection with Latent Inputs"}, "65": {"path": "/detr/models/detr_vae.py:1-35", "hash": "1db359cbef77b40f343eed455253150d", "title": "DETRVAE Model Implementation"}, "66": {"path": "/detr/models/detr_vae.py:36-52", "hash": "2237aaef9a8ec336e123ab126f53e376", "title": "DETR: Object Detection with Transformer"}, "67": {"path": "/detr/models/detr_vae.py:53-71", "hash": "f5a973a076abe87e7d0563a0f0a1f33c", "title": "DETR-VAE Model Initialization"}, "68": {"path": "/detr/models/detr_vae.py:72-90", "hash": "17fb92f0701b0a00fc6b189fc8670d2c", "title": "VAE Layer Initialization in DETR Model"}, "69": {"path": "/detr/models/detr_vae.py:91-107", "hash": "7684ffbfb5a4ea5621f6a9ec3b81b4fd", "title": "Conditional VAE Model for Action Sequences"}, "70": {"path": "/detr/models/detr_vae.py:108-123", "hash": "97738886e1e54da796a05220047c8c96", "title": "DETR VAE Encoder and Latent Representation"}, "71": {"path": "/detr/models/detr_vae.py:123-141", "hash": "ac44b06e311d3bdde873d8efb1c0b909", "title": "DETR-VAE: VQ-VAE Mode Latent Input Calculation"}, "72": {"path": "/detr/models/detr_vae.py:141-163", "hash": "06a875017b89d865439abde13a299a0d", "title": "VAE Latent Samples and Encoding"}, "73": {"path": "/detr/models/detr_vae.py:164-184", "hash": "cea0133275a4f11b909c51af5dcd8cbd", "title": "Detr-VAE Model: Predicting Actions and Latent Variables"}, "74": {"path": "/detr/models/detr_vae.py:185-202", "hash": "5f3899cc1e99b8cc81977efcaa3cb0cd", "title": "Initializing DETR-VAE Model"}, "75": {"path": "/detr/models/detr_vae.py:203-227", "hash": "f02b40e9c15831037015ffafdca733de", "title": "DETR Model: PyTorch Implementation"}, "76": {"path": "/detr/models/detr_vae.py:228-254", "hash": "c37e99c327651c30ca89c6141094423b", "title": "DETR VAE Model: Encoder and MLP"}, "77": {"path": "/detr/models/detr_vae.py:255-289", "hash": "1501d460b3ecb3922273e35379e0bef6", "title": "DETR-VAE Model Initialization"}, "78": {"path": "/detr/models/detr_vae.py:290-325", "hash": "581c6df733479b3b784a2a993b884196", "title": "Building DETR-VAE Models"}, "79": {"path": "/detr/models/latent_model.py", "hash": "d7691031df6fb0ee0fae487f21308f13", "title": "Latent Model Transformer: Sequential Sampling"}, "80": {"path": "/detr/models/latent_model.py:1-28", "hash": "094687141ade37fd79bf8b9733d986fc", "title": "Causal Transformer Architecture"}, "81": {"path": "/detr/models/latent_model.py:29-55", "hash": "edee90f54c24f4c85907ac105cdedcb9", "title": "Latent Space Transformer Model"}, "82": {"path": "/detr/models/latent_model.py:56-72", "hash": "23a459978f8ee96804d52abd943fe98f", "title": "Attention-Based Latent Model"}, "83": {"path": "/detr/models/position_encoding.py", "hash": "9bfd2058fdc154c03bdc653b366b8d45", "title": "Transformer Positional Embedding Class"}, "84": {"path": "/detr/models/position_encoding.py:1-33", "hash": "72d81c895acb63afb9f9ab4c98564295", "title": "Transformer Positional Embedding Class"}, "85": {"path": "/detr/models/position_encoding.py:34-57", "hash": "958722980f9126314f37d7bdf6e9412d", "title": "Position Embedding Generation"}, "86": {"path": "/detr/models/position_encoding.py:58-87", "hash": "9c1d23e755a5bbc06185fda07478c0b2", "title": "Sine-Cosine Position Embedding Class"}, "87": {"path": "/detr/models/position_encoding.py:88-93", "hash": "4a760b032b391286da41797f29a5b3d6", "title": "Position Embedding Initializer"}, "88": {"path": "/detr/models/transformer.py", "hash": "5282ac8b3f5c368b88619447ac00dae4", "title": "Transformer Class for Data Processing"}, "89": {"path": "/detr/models/transformer.py:1-30", "hash": "c813f9f5435a6d16142010bc4797ce67", "title": "Custom Transformer Class from Scratch"}, "90": {"path": "/detr/models/transformer.py:31-54", "hash": "55e32ccb935fba6ccd8c1752753105c6", "title": "Transformer Model Initialization"}, "91": {"path": "/detr/models/transformer.py:55-75", "hash": "890b2e059605c76a5a4b31ac1602f8a8", "title": "Transformer Model Input Shape Handling"}, "92": {"path": "/detr/models/transformer.py:76-109", "hash": "c3fd9de518c35f37fb2551ee8da0b8ca", "title": "Transformer Encoder and Decoder Classes"}, "93": {"path": "/detr/models/transformer.py:110-134", "hash": "58daf84a444a971361bd2c9cee01bb4d", "title": "Transformer Model Forward Pass: Layer Operations and Normalization"}, "94": {"path": "/detr/models/transformer.py:135-163", "hash": "6a3b147dfc71faf181afb15a42fc165d", "title": "Transformer Encoder Layer: Self-Attention and Feedforward"}, "95": {"path": "/detr/models/transformer.py:164-187", "hash": "742d1cca744dc88d289e37b217ef9cdd", "title": "Transformer Positional Embeddings Functions"}, "96": {"path": "/detr/models/transformer.py:188-210", "hash": "95031258ba19c96b484797f8f408d0ce", "title": "Transformer Decoder Layer Class"}, "97": {"path": "/detr/models/transformer.py:211-234", "hash": "22032f1dfe27e3097ae6a86d87960869", "title": "Transformer Feedforward Layer"}, "98": {"path": "/detr/models/transformer.py:235-255", "hash": "4a48e8787f085994fca915370e97a290", "title": "Multi-Head Self Attention Layer"}, "99": {"path": "/detr/models/transformer.py:256-275", "hash": "71796bff9f88e56c17a37b07ca63267d", "title": "Transformer Model Function in PyTorch"}, "100": {"path": "/detr/models/transformer.py:276-299", "hash": "01bc159cc5c77057dfd8d68c0689feef", "title": "Parallel Transformer Models with Masks"}, "101": {"path": "/detr/models/transformer.py:300-314", "hash": "cca71238a2ca92c01a5fe48c79e11ece", "title": "Transformer Model Factory Function"}, "102": {"path": "/detr/setup.py", "hash": "523c5ffbdd386145219918963c5b5411", "title": "Setting Up detr Package"}, "103": {"path": "/detr/util/__init__.py", "hash": "2af07161232532d9ffbcff4980174d06", "title": "Affiliates' Codebase Copyright Statement"}, "104": {"path": "/detr/util/box_ops.py", "hash": "d8853c9c730e6dceba39ba63b11408e7", "title": "Bounding Box Manipulation and GIoU Utilities"}, "105": {"path": "/detr/util/box_ops.py:1-41", "hash": "0948486dd0c3a6a5cf010d010e2ed43e", "title": "Bounding Box Manipulation and GIoU Utilities"}, "106": {"path": "/detr/util/box_ops.py:42-76", "hash": "b604dbb94058a6706f15dcf686383436", "title": "Calculate IoU and Boxes from Masks"}, "107": {"path": "/detr/util/box_ops.py:77-88", "hash": "9164fad4d55ec451aa0f3367af601f0b", "title": "Box Coordinates Tensor"}, "108": {"path": "/detr/util/misc.py", "hash": "851fc39e573095bbd0734c89e876b66d", "title": "Smooth Metric Logger and NestedTensor Utilities"}, "109": {"path": "/detr/util/misc.py:1-37", "hash": "835cf6477ace9642c736c10297ec9249", "title": "Python Smoothed Value Tracker"}, "110": {"path": "/detr/util/misc.py:38-81", "hash": "67e55cb24968f15ffc94e275ce9224cd", "title": "Deque Tracker with Properties and Sync"}, "111": {"path": "/detr/util/misc.py:82-114", "hash": "04f0751632387b26d38a3847387960dd", "title": "All-Gather Utility Function"}, "112": {"path": "/detr/util/misc.py:115-143", "hash": "235f932339012120be9222726989298a", "title": "All-Gather and Reduce Dictionaries"}, "113": {"path": "/detr/util/misc.py:144-176", "hash": "d12f1340d11ec706488e1a463a4b5a6c", "title": "Distributed Metrics Logger"}, "114": {"path": "/detr/util/misc.py:177-208", "hash": "06787256882990fca2c7c8f87e355c84", "title": "Iterable Data Logger Class"}, "115": {"path": "/detr/util/misc.py:209-234", "hash": "85bb9820c4d2368c6bb04f9c7be98bff", "title": "Progress Bar Calculation and Printing Code"}, "116": {"path": "/detr/util/misc.py:235-261", "hash": "178b9af698f89a53c14e06f7ead1d611", "title": "Total Time Calculator and Progress Logger"}, "117": {"path": "/detr/util/misc.py:262-298", "hash": "7a8b770050f9f4112df8d910646444d2", "title": "NestedTensor Class for PyTorch"}, "118": {"path": "/detr/util/misc.py:300-324", "hash": "e96f7792bc128ecc012aaba6ed9d8386", "title": "Nested Tensor from Tensor List"}, "119": {"path": "/detr/util/misc.py:325-349", "hash": "84372617a8f2d009a2693a2fe30997ea", "title": "Creating NestedTensor from List of Tensors"}, "120": {"path": "/detr/util/misc.py:350-386", "hash": "d2e944fda00e4cd44dc0c377fb0841ab", "title": "Distributed Training Utilities"}, "121": {"path": "/detr/util/misc.py:387-425", "hash": "f2a096ec29e0a47e08235b02cee8310d", "title": "Distributed Deep Learning Setup Code"}, "122": {"path": "/detr/util/misc.py:426-454", "hash": "b467cb2b1563e0d768c2893708402c02", "title": "Distributed Process Group Initialization"}, "123": {"path": "/detr/util/misc.py:455-468", "hash": "ee2c0ed1ff82bae7b405d2a352957fe6", "title": "Version-Based Interpolation Check"}, "124": {"path": "/detr/util/plot_utils.py", "hash": "ab0625d0dcb9632a296404474b75b7d6", "title": "Plotting Precision-Recall with Interpolated mAP"}, "125": {"path": "/detr/util/plot_utils.py:1-26", "hash": "eb427fa486bedb6f7661613b55e7be44", "title": "Visualize Training Logs with Matplotlib"}, "126": {"path": "/detr/util/plot_utils.py:28-47", "hash": "2d3ad83f112fa836fed61d62ac1408a6", "title": "Validate Log Directories Existence"}, "127": {"path": "/detr/util/plot_utils.py:48-72", "hash": "b8ad27db995ae54d73ac583437949f7e", "title": "Epoch 1 Log File Checker and Planner"}, "128": {"path": "/detr/util/plot_utils.py:73-97", "hash": "d0d59da0e0babe3d5b9f69db28bd5ffb", "title": "Precision-Recall Plotting Function"}, "129": {"path": "/detr/util/plot_utils.py:98-107", "hash": "2a6ec06aea6f5d88eaae1a2ba6942d84", "title": "Plot Precision-Recall Curves and Scores"}, "130": {"path": "/dxl_test.py", "hash": "1e0d5433653eb4399567f56876174618", "title": "Dynamixel Wheel Control Test"}, "131": {"path": "/dynamixel_client.py", "hash": "c2028b901c7a76f282e532a6e7f9e9d1", "title": "Dynamixel Motor Control Client"}, "132": {"path": "/dynamixel_client.py:1-38", "hash": "0a433a9a110f0764613a719fc0375053", "title": "Dynamixel Motor Communication Python Library"}, "133": {"path": "/dynamixel_client.py:39-74", "hash": "88754b52d16ba07efe23fd3c72366727", "title": "Dynamixel Client Class and Conversion Functions"}, "134": {"path": "/dynamixel_client.py:75-93", "hash": "550ca588a288d40df1441385ec4130a5", "title": "Dynamixel Client Constructor"}, "135": {"path": "/dynamixel_client.py:94-118", "hash": "1bb8b3e852d1573ec7b676328168d36f", "title": "Dynamixel Motor Readers Initialization"}, "136": {"path": "/dynamixel_client.py:119-146", "hash": "b6bf4c8a58232fd2666abd1d08036c9e", "title": "Dynamixel Motor Initialization and Connection"}, "137": {"path": "/dynamixel_client.py:147-171", "hash": "787498ba01b34463118adaa1a0889eb5", "title": "Dynamixel Client: Connect, Configure, Control"}, "138": {"path": "/dynamixel_client.py:172-196", "hash": "479be4b0d13b2c7da26859c18c8e4d58", "title": "Disabling Motors and Cleaning Clients"}, "139": {"path": "/dynamixel_client.py:197-221", "hash": "1ff7bc491cf293aa1720df71d70bd342", "title": "Dynamixel Motor Torque Control"}, "140": {"path": "/dynamixel_client.py:223-254", "hash": "6ebc3ecf7763027e69d9423607eb4df9", "title": "Dynamixel Position Control Functions"}, "141": {"path": "/dynamixel_client.py:255-279", "hash": "f03d2a8fbee09f319a376fa07e0d1b47", "title": "Sync Write Function"}, "142": {"path": "/dynamixel_client.py:280-307", "hash": "686b717c027573cf1fbf8b28936be316", "title": "Synchronous Motor Write System"}, "143": {"path": "/dynamixel_client.py:308-329", "hash": "8229a7c662c4bcbe6c0cf69dd38a22b8", "title": "Error Handling and Unsigned Conversion"}, "144": {"path": "/dynamixel_client.py:330-365", "hash": "6a9b2c6838d9007eb58ac4b1c66dc129", "title": "Dynamixel Motor Data Reader"}, "145": {"path": "/dynamixel_client.py:367-392", "hash": "b008928c7c0fe44f5ef4310c37011fec", "title": "Bulk Motor Data Read with Retries"}, "146": {"path": "/dynamixel_client.py:393-425", "hash": "0b566e2b0c3bd65742dd40f38b867192", "title": "Dynamixel Client: Read and Update Motor Data"}, "147": {"path": "/dynamixel_client.py:426-450", "hash": "942b40e6cda294336fcdd1caaa04f8ff", "title": "Dynamixel Servo Data Reader Class"}, "148": {"path": "/dynamixel_client.py:451-479", "hash": "7475c9fc76426aeef11eec899158b89c", "title": "Dynamixel Position Reader Class"}, "149": {"path": "/dynamixel_client.py:480-509", "hash": "3571a698c7fd2e87086f96873b976193", "title": "Dynamixel Motor Data Reader"}, "150": {"path": "/dynamixel_client.py:510-538", "hash": "ccf1f6ea75bedcc339caa0bbd03468c4", "title": "Dynamixel Cur Reader Class"}, "151": {"path": "/dynamixel_client.py:539-571", "hash": "b292997eb9cdaad7f83bdaab771410bd", "title": "Dynamixel Motor Data Reader Class"}, "152": {"path": "/dynamixel_client.py:572-598", "hash": "ae5b06a5f85a3fd1489f0fb338a30eae", "title": "Dynamixel Client: Motor Control via Waypoints"}, "153": {"path": "/dynamixel_client.py:599-604", "hash": "2de3a3d99c7451623a7f755dcb3d42ef", "title": "Dynamixel Servo Status Tracker"}, "154": {"path": "/ee_sim_env.py", "hash": "8e1ac69296af215576f9ee321fcd49b9", "title": "Insertion Environment: Bi-Manual Peg Tasks"}, "155": {"path": "/ee_sim_env.py:1-26", "hash": "d50eef4036b1768ee3fe79d48f704145", "title": "Bi-manual Manipulation Environment"}, "156": {"path": "/ee_sim_env.py:28-38", "hash": "741e6ea8f5994608aed016a4fb94cc4f", "title": "Robotics Simulation Environment: Observing Arm and Gripper Positions, Velocities, and Camera Data"}, "157": {"path": "/ee_sim_env.py:39-61", "hash": "79f9288468a7ddf1fae70b2bd844cac7", "title": "Initializing Bimanual ViperX EE Task Environment"}, "158": {"path": "/ee_sim_env.py:63-84", "hash": "c6a7b6784790b61dde10092ecddfc268", "title": "Resetting Robot Positions and Gripper Control"}, "159": {"path": "/ee_sim_env.py:85-110", "hash": "e1356da37a07cd6e3fdfcc8dc673e541", "title": "Robot Arm Initialization Code"}, "160": {"path": "/ee_sim_env.py:111-133", "hash": "e2f80e4677d668519a2a78e8d02a04d6", "title": "Normalizing Joints and Gripper Positions"}, "161": {"path": "/ee_sim_env.py:134-155", "hash": "6855cff8b3d65582fab8ff043b5ab070", "title": "Robot Arm Environment Class"}, "162": {"path": "/ee_sim_env.py:156-181", "hash": "56a6e6d86e734b3b9be7d3556bf826c5", "title": "Randomized Box Environment Initialization"}, "163": {"path": "/ee_sim_env.py:182-208", "hash": "d96ce861e89e0785f028732878901b59", "title": "Insertion EE Task: Rewarding Contact Scenarios"}, "164": {"path": "/ee_sim_env.py:209-232", "hash": "706bfb0ab8f463b7e7357d23f15f4847", "title": "Randomizing Peg and Socket Positions in Physics Simulation"}, "165": {"path": "/ee_sim_env.py:233-248", "hash": "ef9f37625a612490ccaf9ea1cc8a1f50", "title": "Red Peg Detection in Physics Simulation"}, "166": {"path": "/ee_sim_env.py:249-265", "hash": "49eff836d276ad77ecdfb09c5bc9934a", "title": "Reward-Based Contact Pair Detector"}, "167": {"path": "/ee_sim_env.py:266-267", "hash": "70dd93f8847cd41eda3704ccdc5ae3dc", "title": "Fixed Reward Value Function"}, "168": {"path": "/imitate_episodes.py", "hash": "2cde512038d4765235ee241980ee5bf3", "title": "Episodic Robot Imitation Learning"}, "169": {"path": "/imitate_episodes.py:1-35", "hash": "0e91cc212bfa4cb46642a7a035f636f8", "title": "Reinforcement Learning Task Setup"}, "170": {"path": "/imitate_episodes.py:37-65", "hash": "a3a4e260f017f40492920e2cd00b9109", "title": "Setting Up Simulation Environment"}, "171": {"path": "/imitate_episodes.py:66-90", "hash": "4194a1b7f6e45f487cc32cee86035a0a", "title": "ACT Policy Configuration"}, "172": {"path": "/imitate_episodes.py:91-115", "hash": "6611b2533ce9094ab3e68b7b4d1c6ab2", "title": "Configuring Policy-Based RL Agents"}, "173": {"path": "/imitate_episodes.py:116-146", "hash": "8665390946afb4c19be79de36c521249", "title": "Defining and Initializing Training Dictionaries"}, "174": {"path": "/imitate_episodes.py:147-165", "hash": "242b178f827dec383e6ac62601b25c1d", "title": "Evaluating Checkpoints and Config Updates"}, "175": {"path": "/imitate_episodes.py:167-198", "hash": "022bea7e501d501a2a32c629f115024a", "title": "Save, Train, Optimize"}, "176": {"path": "/imitate_episodes.py:199-222", "hash": "93ec9acc93737ced3f5afe771f6d33b0", "title": "Policy-Based Optimizer Configuration"}, "177": {"path": "/imitate_episodes.py:223-253", "hash": "4af35712324e8bc0247ae7aed008c919", "title": "Initialize Policy and Environment Variables"}, "178": {"path": "/imitate_episodes.py:254-274", "hash": "3c5ee7712945be0777c2fa1444c40f3a", "title": "Loading and Initializing Models"}, "179": {"path": "/imitate_episodes.py:275-290", "hash": "ce09f712061b31714097bc9b5900921c", "title": "Actuator Network Loading and Evaluation"}, "180": {"path": "/imitate_episodes.py:291-318", "hash": "0a9ee823637d2fb2871c58fd031cf7c9", "title": "Initialize Environment and Parameters"}, "181": {"path": "/imitate_episodes.py:319-347", "hash": "76197b9418521e6ff26e44b457a33a05", "title": "Initializing Rollout Loop and Task"}, "182": {"path": "/imitate_episodes.py:348-370", "hash": "3dfab39c5348bd04d772001d0adde6d4", "title": "Timestep Processing and Render Update"}, "183": {"path": "/imitate_episodes.py:371-392", "hash": "b2c6f141f63c18395eeb3a22cae33e63", "title": "Policy Execution in Reinforcement Learning Environment"}, "184": {"path": "/imitate_episodes.py:393-408", "hash": "cf6390e6d4941d9e308f54743293d7d2", "title": "Temporal Aggregation for Robot Action Generation"}, "185": {"path": "/imitate_episodes.py:409-423", "hash": "3c15846b90a5e4e2aba779cc2108bc2d", "title": "Robotic Control Policy Switching Code"}, "186": {"path": "/imitate_episodes.py:424-444", "hash": "5fc488fde40ab40a30079d096a6ab466", "title": "Policy Selection and Actions Processing"}, "187": {"path": "/imitate_episodes.py:445-465", "hash": "f4b002ccf87aad15acdf4a4d377252fe", "title": "Actuator Network Update and Base Action Calculation"}, "188": {"path": "/imitate_episodes.py:466-484", "hash": "0049b2b376579b5570627d9ed7806ccd", "title": "Sleep Sync and Reward Appending"}, "189": {"path": "/imitate_episodes.py:485-508", "hash": "52ab849f785e7330ca770cc1d82e7086", "title": "Episode Performance Analysis"}, "190": {"path": "/imitate_episodes.py:509-532", "hash": "0dcead8daf69ba3fcb1d435529c4321f", "title": "Episode Summary Calculator"}, "191": {"path": "/imitate_episodes.py:535-560", "hash": "f0da2432f5939c83d422a53af6c1c8b3", "title": "Training Policy with Data Loader"}, "192": {"path": "/imitate_episodes.py:561-584", "hash": "a138d64a69f7804f8ee874d1361b132c", "title": "Validation Logging and Model Checkpointing"}, "193": {"path": "/imitate_episodes.py:585-611", "hash": "90f4797e1d38aaafb22cee664e28d2b2", "title": "Training and Validation Logging"}, "194": {"path": "/imitate_episodes.py:612-638", "hash": "0dae66da78cb6a2ef664b455b0d9dcb7", "title": "Best Model Identification and Saving"}, "195": {"path": "/imitate_episodes.py:639-648", "hash": "db8762ed43160725febd245fdc9c3d75", "title": "Command-Line Arguments for Task Execution"}, "196": {"path": "/imitate_episodes.py:649-662", "hash": "215d35afa3fb8c37581051d445ea5d95", "title": "Customizable ACT Model with Argparse Options"}, "197": {"path": "/imitate_episodes.py:663-666", "hash": "96b787006a8ba6f643afd0224dc45d0e", "title": "Command Line Arguments for Parser Object"}, "198": {"path": "/policy.py", "hash": "790c7422521e26847d848d6cdbf51c1b", "title": "Policy Network for Multi-Camera Tasks"}, "199": {"path": "/policy.py:1-28", "hash": "a2ab51d3140216a6b2f505916d0ba92b", "title": "Diffusion Policy Model Creation"}, "200": {"path": "/policy.py:29-48", "hash": "49727e4ec2561f421425c1d9a9cfd4cc", "title": "Initializing Model Parameters and Creating Layers"}, "201": {"path": "/policy.py:50-86", "hash": "e73bb30ecc7a14a47abd5f8f7ed249d2", "title": "Defining Policy Networks with Backbones"}, "202": {"path": "/policy.py:87-111", "hash": "208fdbea44abc04f410878e4c1656e73", "title": "Optimizing Multi-Camera Policy Network"}, "203": {"path": "/policy.py:113-137", "hash": "f1ece8e2e4b6c33fb282e6b7c334c997", "title": "Diffusion Noise Sampling and Loss Calculation"}, "204": {"path": "/policy.py:138-162", "hash": "b8e75607382b8378be87c6b28b288994", "title": "Gaussian Noise Init Action from Policy"}, "205": {"path": "/policy.py:164-193", "hash": "a8b57484163d41664ce90fd0bc1c100a", "title": "Noise Scheduler Initialization"}, "206": {"path": "/policy.py:194-218", "hash": "4388ca88b753540517717cc0fff82e99", "title": "ACT Policy Class for RL Tasks"}, "207": {"path": "/policy.py:219-240", "hash": "3700685aa9ed92fcbe571aed507f107c", "title": "Training Policy Function for RL with KL Divergence"}, "208": {"path": "/policy.py:241-270", "hash": "c9642db93909c43b30997d83b7fdd0d7", "title": "CNNMLP Policy Model Initialization"}, "209": {"path": "/policy.py:271-295", "hash": "2a028f2d43caeef6a639a54be6b91316", "title": "KL Divergence Neural Network Policy Model"}, "210": {"path": "/postprocess_episodes.py", "hash": "adb412f17693b105e42bd21af8cdce00", "title": "Efficient Data Processing: Postprocess Episodes"}, "211": {"path": "/postprocess_episodes.py:1-33", "hash": "ad7b770e54feed63f93abb4e4299fe55", "title": "Robot Data Processing Script"}, "212": {"path": "/postprocess_episodes.py:34-60", "hash": "9e634a6ea1eb681a0e30155319b1f9e5", "title": "Postprocess Episodes: Unpack, Uncompress and Store Images"}, "213": {"path": "/postprocess_episodes.py:61-77", "hash": "4520cb6ac95bd6fd940a66bb180a899b", "title": "Episode Data Processor"}, "214": {"path": "/postprocess_episodes.py:77-103", "hash": "c89bdfdd044a27dec162f75905c3d5dc", "title": "Episode Postprocessing: Flip, Data Dict Creation, Compression"}, "215": {"path": "/postprocess_episodes.py:105-125", "hash": "3805d9d1cdc2dfd6ff226d966f2bf485", "title": "Compress and Measure Image Compression Time"}, "216": {"path": "/postprocess_episodes.py:126-143", "hash": "5b660da37b645e162f6592092f2733dc", "title": "Padding and Saving Images for HDF5"}, "217": {"path": "/postprocess_episodes.py:144-162", "hash": "d149133366c5cffb7e29185c1ddab53e", "title": "Code for Dataset Creation and Population"}, "218": {"path": "/postprocess_episodes.py:164-175", "hash": "366873b166abb0ab5a9aa069d631c040", "title": "Episode Post-processing Tool"}, "219": {"path": "/record_sim_episodes.py", "hash": "a46447b1828e8c30b305950559930ac0", "title": "Record and Evaluate Simulation Episodes"}, "220": {"path": "/record_sim_episodes.py:1-33", "hash": "484fb68870bfc82edc0c1f581bcc851e", "title": "Replaying Simulated Episodes for Datasets"}, "221": {"path": "/record_sim_episodes.py:34-61", "hash": "bc65f177338d3a414608639a48c2856f", "title": "Episode Loop Initialization"}, "222": {"path": "/record_sim_episodes.py:62-84", "hash": "9ffbac27ad82dd367ca69a207055490b", "title": "Episode Recording and Trajectory Extraction"}, "223": {"path": "/record_sim_episodes.py:86-113", "hash": "24ffb342da7ea85d662d9faf774fff35", "title": "Episode Replay Mechanism"}, "224": {"path": "/record_sim_episodes.py:114-145", "hash": "a88712bbfa9d39fe3f8406bf0bf1e469", "title": "Episode Success Measurer"}, "225": {"path": "/record_sim_episodes.py:146-167", "hash": "6468263bc5ac66d3ccd579b8eadeb730", "title": "Sim Episode Processor"}, "226": {"path": "/record_sim_episodes.py:168-186", "hash": "148e8696851f3d8f98b1ce8e0caf0bf0", "title": "Simulation Data Generation and Analysis"}, "227": {"path": "/record_sim_episodes.py:187-190", "hash": "17ae9e4f01d35c5e8c767cef32836251", "title": "Command Line Arguments for Parser"}, "228": {"path": "/replay_episodes.py", "hash": "4abc0953fd2d3ed3f70ffd561640a2b7", "title": "Episode Replayer: Organize Images to Videos"}, "229": {"path": "/replay_episodes.py:1-41", "hash": "09b5c1b174a5edc5841bff29e3d9f2a8", "title": "Replay Episode Simulator"}, "230": {"path": "/replay_episodes.py:42-48", "hash": "109501a64d7bf64a8e82a6621d136bd9", "title": "Save Videos Function Setup"}, "231": {"path": "/scripted_policy.py", "hash": "b2d58043af9fef33d0b8590341d986c0", "title": "Scripted Policy: Robotic Arm Trajectory Execution"}, "232": {"path": "/scripted_policy.py:1-33", "hash": "50a0978260738dcae6d988511c75ce0a", "title": "Robotic Arm Policy Generation"}, "233": {"path": "/scripted_policy.py:34-56", "hash": "f012a2ee6f8a47cd09ac732427a59589", "title": "Interpolating Trajectory Executor"}, "234": {"path": "/scripted_policy.py:57-81", "hash": "7ffad6d5f88d51bb106c2db449222875", "title": "PickAndTransferPolicy: Noisy Trajectory Generation"}, "235": {"path": "/scripted_policy.py:83-95", "hash": "e1bb77be11959b8e78fbf15f1a364a91", "title": "Robot Arm Sequence and Movement Control"}, "236": {"path": "/scripted_policy.py:96-103", "hash": "891a132a8899d19cae993d2481e84486", "title": "Robot Gripper Sequence: Approach, Grip, Move, Close, Meet, Open, Stay"}, "237": {"path": "/scripted_policy.py:104-131", "hash": "168cf4048ff3b9747af2cc4bf9ec3f66", "title": "Initialize InsertionPolicy Variables"}, "238": {"path": "/scripted_policy.py:132-142", "hash": "ce02b4d8fb8fec839d1db3b0e355cbdb", "title": "Robot Arm Trajectory Sequence Script"}, "239": {"path": "/scripted_policy.py:142-158", "hash": "f2d4ae01a7911bf162a4b1afe8226168", "title": "Object Transfer Policy Script"}, "240": {"path": "/scripted_policy.py:159-191", "hash": "8ae866b2f9cf672af86dc0f92a583d98", "title": "PickAndTransfer: Policy Execution and Evaluation"}, "241": {"path": "/scripted_policy.py:192-193", "hash": "d819a6f073dddddd5080b17a3f1f08ca", "title": "Scripted Policy: Testing Simulated Cube Transfer"}, "242": {"path": "/setup.py", "hash": "43a7c98956d0a8bbb9c5835d5a060403", "title": "Setup 'act' Software Distribution"}, "243": {"path": "/sim_env.py", "hash": "4ca1dbab07f1fd2a23009eab67be0878", "title": "Bi-Manual Manipulation Environment"}, "244": {"path": "/sim_env.py:1-26", "hash": "9d0c6e6f2f2c9ba7f84fa9bb56ff8e63", "title": "Simulation Environment for Bi-Manual Robot Control"}, "245": {"path": "/sim_env.py:28-38", "hash": "48da4b9b1cacf2283cb32b792bdbd514", "title": "Observation Space for Cube Transfer Simulation"}, "246": {"path": "/sim_env.py:39-61", "hash": "b0030b203cc426bce61fc0686dfedf29", "title": "Bimanual ViperX Environment Setup"}, "247": {"path": "/sim_env.py:62-84", "hash": "e2b4757f061e5d3f326cb938960181ee", "title": "Gripper Actions in Puppet Environment"}, "248": {"path": "/sim_env.py:85-107", "hash": "2eb5e507bc8bbdd900fe217aa6272593", "title": "Joint Data Extraction and Normalization"}, "249": {"path": "/sim_env.py:108-130", "hash": "e2b925b85e3bbb9de05df4b316a4366f", "title": "Bimanual Task Environment Class"}, "250": {"path": "/sim_env.py:131-154", "hash": "9d2bcad3c941a8ca71db25b66096558c", "title": "Gripper Reward Calculation Algorithm"}, "251": {"path": "/sim_env.py:156-180", "hash": "8adecf7384241ebf6e1575b57c0570b2", "title": "Episode Initialization and Contact Rewards"}, "252": {"path": "/sim_env.py:181-205", "hash": "96a49d55333822974a15d73c8e236911", "title": "Physics Simulation Environment Setup"}, "253": {"path": "/sim_env.py:206-218", "hash": "bb826a8b245d72ee488d41a213f05481", "title": "Checking Gripper and Peg Contact in Vx300s"}, "254": {"path": "/sim_env.py:219-242", "hash": "8b922cb929f465b0f727baf6169a1996", "title": "Function Defines Rewards and Actions in Sim Environment"}, "255": {"path": "/sim_env.py:243-266", "hash": "d1b4d340f79e302affc2f8dbe9364ec5", "title": "Teleoperation Test Setup: ALOHA and InterbotixManipulatorXS"}, "256": {"path": "/sim_env.py:267-279", "hash": "251130a179670b825e04e462f306d825", "title": "Interactive Simulation Env. Plotting & Action Inputs"}, "257": {"path": "/train_actuator_network.py", "hash": "be4772760cae26213c22837e58b6e2c4", "title": "Train Actuator Network: Data to Policy"}, "258": {"path": "/train_actuator_network.py:2-41", "hash": "236133550eff32a63ea12f54acd39d71", "title": "Training Actuator Network: Parameters and Libraries"}, "259": {"path": "/train_actuator_network.py:42-61", "hash": "f3f03b535bb6a6f5c5ebc32509c2b331", "title": "Initialize, Assert, Split & Print Data"}, "260": {"path": "/train_actuator_network.py:63-80", "hash": "d5e99f8f8ce4806c3ef25497c11718e2", "title": "Train Actuator Network: Dataset Preparation and Saving"}, "261": {"path": "/train_actuator_network.py:81-102", "hash": "cf5c0e16460488fe49c46d3f724d6e4c", "title": "Train Actuator Network: Initialize, Validate, Repeat"}, "262": {"path": "/train_actuator_network.py:103-121", "hash": "c0284547276cdba4a4bdbe935e8c2dd6", "title": "Tracking Validation Loss and Predictions"}, "263": {"path": "/train_actuator_network.py:122-146", "hash": "f0f66dbda12de76cd4d38498c3d5a725", "title": "Training Actuator Network Policy"}, "264": {"path": "/train_actuator_network.py:147-167", "hash": "bb232543d3335dfa8d9f882bd0d065ba", "title": "Visualizing Neural Network Predictions"}, "265": {"path": "/train_actuator_network.py:169-189", "hash": "b2ad394206f252f05808614bf071dd8c", "title": "Neural Network Prediction of Commands"}, "266": {"path": "/train_actuator_network.py:190-217", "hash": "fb699da9707ae4eb0c77a9881d928953", "title": "Visualize Actuator Network Speeds"}, "267": {"path": "/train_actuator_network.py:218-243", "hash": "c99bd70e03c40f727247fc1cbb270f39", "title": "Train Transformer Network for Prediction"}, "268": {"path": "/train_actuator_network.py:244-272", "hash": "1232ebb27281bf7633d54ca6fbfb076e", "title": "Transformer & Positional Encoding for Source Data Extraction"}, "269": {"path": "/train_actuator_network.py:273-295", "hash": "deb315abb05556d0da088be9472a3ef8", "title": "Normalizing Speed Data for Analysis"}, "270": {"path": "/train_actuator_network.py:296-316", "hash": "508f5399b603ab0ad97bc7b9ad123c97", "title": "Calculate Means and Standard Deviations of Speeds"}, "271": {"path": "/train_actuator_network.py:317-340", "hash": "4bb69bb95c26f1ad77a1ccc62f1f0ab5", "title": "Locate Transition Index and Read Commanded Speed"}, "272": {"path": "/train_actuator_network.py:341-357", "hash": "b78efe13c4ec91feb54a6d146501786a", "title": "Preparing Input Data for ML"}, "273": {"path": "/train_actuator_network.py:358-367", "hash": "b4d0714c068b1e0d79d589d209dc100d", "title": "Train Actuator Network Function"}, "274": {"path": "/train_latent_model.py", "hash": "cc85bab09021eee715713c9cf79f67b8", "title": "Train Latent Model with ACT-Plus-Plus"}, "275": {"path": "/train_latent_model.py:1-36", "hash": "b7e51532be0d3c93169b3729cc64435b", "title": "Train Latent Model with ACT-Plus-Plus"}, "276": {"path": "/train_latent_model.py:38-65", "hash": "6298c6dc46e9c9f2cf21db9b54cf06b6", "title": "Retrieve Task Parameters from File"}, "277": {"path": "/train_latent_model.py:66-92", "hash": "adaeb86cee494c3ca12a4c0619d32782", "title": "Latent Model Training Configurator"}, "278": {"path": "/train_latent_model.py:93-120", "hash": "c0bb78f2ab45ec70b47eea26a57068e5", "title": "Train Behavioral Cloning Model"}, "279": {"path": "/train_latent_model.py:122-154", "hash": "e3efc671f3c2bc3445bdd302af21af8b", "title": "Save Best Checkpoint and Define Policy Function"}, "280": {"path": "/train_latent_model.py:155-184", "hash": "51461fdef6cc5bbe404f4bf8b1160f73", "title": "Policy Evaluation Function"}, "281": {"path": "/train_latent_model.py:185-213", "hash": "9b9ffee3afa18c1b082e07cecb280f37", "title": "Real/Simulated Environment Initialization and Setup"}, "282": {"path": "/train_latent_model.py:214-238", "hash": "e2ca1e192ca1a9fd68d51ebf4504ade8", "title": "Training Latent Model Evaluation Loop"}, "283": {"path": "/train_latent_model.py:239-260", "hash": "f22b5621949a112dcdfd1225da19d824", "title": "Training Latent Model in Interactive Environment"}, "284": {"path": "/train_latent_model.py:261-279", "hash": "228ecd010daae3e2efc324debf8ffab6", "title": "Policy-Based Action Selection"}, "285": {"path": "/train_latent_model.py:280-302", "hash": "6d62260afdc97710c8e85f9ca0df200b", "title": "Episode Tracking and Visualization in Robotics"}, "286": {"path": "/train_latent_model.py:303-326", "hash": "2364404e5a304827f3ff87d799a9d75a", "title": "Rollout Performance Summarizer"}, "287": {"path": "/train_latent_model.py:327-353", "hash": "7500e56cd0aa5c7c51f08beef0d4630d", "title": "Train Latent Model with VQ-VAE"}, "288": {"path": "/train_latent_model.py:355-382", "hash": "57beebbfd52e10e7eb530c857da8977c", "title": "Train Latent Model and Policy"}, "289": {"path": "/train_latent_model.py:384-406", "hash": "fbce9e24b3f7d515e81eb32f0f5dce01", "title": "Epoch Summary and Loss Tracking"}, "290": {"path": "/train_latent_model.py:407-431", "hash": "47fca7e0aca082692bbde05574083bce", "title": "Saving and Plotting Latent Model Progress"}, "291": {"path": "/train_latent_model.py:432-453", "hash": "6401cace0ddab9a435ceff495347c355", "title": "Plotting Training Curves for Latent Model"}, "292": {"path": "/train_latent_model.py:454-466", "hash": "ece8bae22868bf1281e5b8f84e368248", "title": "Customizable Latent Model Training"}, "293": {"path": "/train_latent_model.py:467-470", "hash": "31b45fbc2c80de7e6b775d3215e1dc9d", "title": "Parse Latent Model Parameters"}, "294": {"path": "/truncate_data.py", "hash": "9c912c52cd02768439950f35a5459cfc", "title": "Truncate and Compress Dataset with h5py"}, "295": {"path": "/truncate_data.py:1-35", "hash": "c07fd7aa9eb2c002531f0897a9da983b", "title": "Truncate and Compress Dataset"}, "296": {"path": "/truncate_data.py:36-57", "hash": "62c2f3c00a14b7ca9e5e40c38b3a8e5f", "title": "Data Compression and Observation Group Creation"}, "297": {"path": "/truncate_data.py:58-84", "hash": "b228ca9995536682f40ab8cbf41ca467", "title": "Truncate and Concatenate Data"}, "298": {"path": "/truncate_data.py:85-111", "hash": "8a782fbe72f4dd7ccbcf82f3ac4ae7fe", "title": "Load and Save First Episode Video"}, "299": {"path": "/truncate_data.py:112-135", "hash": "78244bf17bfab04ffd6ab45c07e0885f", "title": "Compress-Decompress Image Data"}, "300": {"path": "/truncate_data.py:138-157", "hash": "2e64f42abc1aefe5eff7abb1f51577fd", "title": "Truncate HDF5 Datasets"}, "301": {"path": "/utils.py", "hash": "c900639d95be57285868dd824d9cfcb0", "title": "Episodic Dataset Processing & Augmentation"}, "302": {"path": "/utils.py:1-33", "hash": "3bf9e820f82aca8847ccca03d605b401", "title": "Episodic Dataset Augmenter"}, "303": {"path": "/utils.py:34-58", "hash": "1945095a7bfe382249b468a03ca11ff9", "title": "Transformation Initialization and Location Function"}, "304": {"path": "/utils.py:59-77", "hash": "2d63c3c9ebb5de02bb7eef8ad4c0b1ba", "title": "Base Action Concatenation and Data Storage"}, "305": {"path": "/utils.py:78-99", "hash": "28ca621a1dd2b49b0d709588dcd734fc", "title": "Video Preprocessing for Agent in Simulation"}, "306": {"path": "/utils.py:100-121", "hash": "d1a24fbf7290b9ca2713f8a4930834ac", "title": "Image Stacking and Preprocessing"}, "307": {"path": "/utils.py:122-145", "hash": "9d4264e8784176049ef82c4016e1b3c3", "title": "Image Data Preprocessing and Error Handling"}, "308": {"path": "/utils.py:146-171", "hash": "3a4b7eea991ecd4094f0c33dbcc34753", "title": "Get Normalized Stats from Dataset Paths"}, "309": {"path": "/utils.py:172-196", "hash": "45278e72beaf65a80a2e86246d326774", "title": "Normalizing Data for Machine Learning Training"}, "310": {"path": "/utils.py:198-218", "hash": "73c81eca40c9389eec11b24d509356a5", "title": "HDF5 Search and Batch Sampler Functions"}, "311": {"path": "/utils.py:220-233", "hash": "962f559a1abd339da137989b935d99ae", "title": "Load and Split Data Function"}, "312": {"path": "/utils.py:234-247", "hash": "baf52e82a9d5caf1dc2d9e507db0ac89", "title": "Generate and Print Train/Validation Episode Details"}, "313": {"path": "/utils.py:248-264", "hash": "851d29464fa9e1ae1d033e1027d6011c", "title": "Episodic Dataset Initialization"}, "314": {"path": "/utils.py:265-284", "hash": "70f084e65b858188b09c0d8c66264546", "title": "Augmented Worker Datasets"}, "315": {"path": "/utils.py:285-324", "hash": "383172a71c60238ca6ac715190fa12a4", "title": "Base Action Preprocessing and Pose Sampling"}, "316": {"path": "/utils.py:325-360", "hash": "b827ea67ab1854a070295db9b825d1ce", "title": "Calculate Mean, Detach Values, Set Seed Utilities"}, "317": {"path": "/vinn_cache_feature.py", "hash": "38adee3e1185185fd511a1c687346da7", "title": "Cache Feature Extraction"}, "318": {"path": "/vinn_cache_feature.py:1-44", "hash": "a6c57825b08242e838009bb4647e9dda", "title": "VINN Feature Extraction Code"}, "319": {"path": "/vinn_cache_feature.py:45-72", "hash": "51227442b667c72a425a3cbca15ce14f", "title": "Load and Organize Data for Feature Extractors"}, "320": {"path": "/vinn_cache_feature.py:73-93", "hash": "44dbf4572664e0a367233020d7909c17", "title": "Initialize and Preprocess ResNet18 Model for Inference"}, "321": {"path": "/vinn_cache_feature.py:94-117", "hash": "f71cfe624f386cbaeb0643dad6f42e45", "title": "Feature Extraction and Storage from Images"}, "322": {"path": "/vinn_cache_feature.py:118-142", "hash": "e496fa8828867508028739807cf8bb5b", "title": "Saving Features to HDF5 File"}, "323": {"path": "/vinn_cache_feature.py:143-148", "hash": "b28cc7243a5b72d034bfd064934151f7", "title": "Setting up Argument Parser"}, "324": {"path": "/vinn_eval.py", "hash": "63d872efbdd58e8e983f06b1838cf21c", "title": "Vinn Evaluation Script"}, "325": {"path": "/vinn_eval.py:1-35", "hash": "8c755b52459e55ad5e7a2a0d7a5d9b32", "title": "Nearest Neighbor Calculator"}, "326": {"path": "/vinn_eval.py:37-63", "hash": "97361e61fbae2b5b1d95ed1b7fcc541a", "title": "Weighted Pairwise Distance Prediction"}, "327": {"path": "/vinn_eval.py:64-101", "hash": "94aff22217c18007a579549590b4cca7", "title": "Task-Specific Parameter Setting and Configuration"}, "328": {"path": "/vinn_eval.py:102-130", "hash": "a58e8773f4241bf7202bf8f14ecf7759", "title": "Train Data Loading: Visual Feature Concatenation"}, "329": {"path": "/vinn_eval.py:132-154", "hash": "306717514c2a05cbb3a9e251049b5aaa", "title": "Stacking Actions and Formatting Torch Tensors"}, "330": {"path": "/vinn_eval.py:155-185", "hash": "19289aa396f2b41038a1795d1faf75b9", "title": "Rollout Performance Tracking Algorithm"}, "331": {"path": "/vinn_eval.py:186-209", "hash": "6818ba8a5a3e8715c6960800a39dcdb1", "title": "Evaluation Loop and Data Collection"}, "332": {"path": "/vinn_eval.py:210-229", "hash": "c41e4745892bd69d8cad2d218da587a5", "title": "Robotics Image Processing"}, "333": {"path": "/vinn_eval.py:230-250", "hash": "9a30ca38d92a94d387644cc0ab8da89a", "title": "Nearest Neighbor Action Selection"}, "334": {"path": "/vinn_eval.py:252-275", "hash": "905c61bc50ac12a8775201126e7dc161", "title": "Robot Joint Control and Safety Ensuring"}, "335": {"path": "/vinn_eval.py:276-294", "hash": "c0cbd0e9860e4f84f9c65b46d93b5bbe", "title": "Gripper Mode Setting and Performance Evaluation"}, "336": {"path": "/vinn_eval.py:295-322", "hash": "678c99c7356d941d506ff5251437181f", "title": "Episode Analysis: Success Rate, Average Return"}, "337": {"path": "/vinn_eval.py:323-336", "hash": "63cbbf755c1604706642339d00a6728e", "title": "Expand Greyscale Image Classification Script"}, "338": {"path": "/vinn_select_k.py", "hash": "be5e04ade8f24ddf51df5cd4a12f7377", "title": "Selecting Optimal K with Nearest Neighbors"}, "339": {"path": "/vinn_select_k.py:1-31", "hash": "9445c25f69ee9832ab6c39e5ae278ef0", "title": "Selecting K-Nearest Neighbors with Softmax Weights"}, "340": {"path": "/vinn_select_k.py:32-66", "hash": "375bb4c519fe82e828da639e77a9842a", "title": "Episode Index Validator"}, "341": {"path": "/vinn_select_k.py:67-94", "hash": "122d7d8219dfca73419a05271e31cee1", "title": "Concatenate HDF5 Data for Training"}, "342": {"path": "/vinn_select_k.py:95-118", "hash": "67ef0ab5f1e43af5dfc973ccddebd0d1", "title": "Prepare HDF5 Data for Training in PyTorch"}, "343": {"path": "/vinn_select_k.py:119-134", "hash": "f522c30b22602ea0454192984f512cad", "title": "Optimal 'k' Selection with Python Code"}, "344": {"path": "/visualize_episodes.py", "hash": "28f8278be270ee335725f1f525968bac", "title": "Timestamp Plot Generator"}, "345": {"path": "/visualize_episodes.py:1-35", "hash": "bf31bb454d8be21bbfb112978bc0ea18", "title": "Robotics Data Loading and Processing"}, "346": {"path": "/visualize_episodes.py:36-60", "hash": "d6322daf60cce70bd176826434dcd401", "title": "Mirrored HDF5 Data Visualization"}, "347": {"path": "/visualize_episodes.py:61-87", "hash": "97273b110463010fde95462ebb46de60", "title": "Video Concatenator and Joint Visualizer"}, "348": {"path": "/visualize_episodes.py:88-123", "hash": "8b61701112a70df4c0e3413478b5ded2", "title": "Visualize Joint States and Arm Commands"}, "349": {"path": "/visualize_episodes.py:124-154", "hash": "2bc31a3b139a0cd958c123ad5d209bc3", "title": "Timestamp Visualization for Camera Frames"}}}